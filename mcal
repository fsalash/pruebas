#! /bin/bash
# pruebas mcal
# No me gusta Modificacion desde git web
#Declaracion de variables para uso en el script
Params=$#
Mes=$1
Anio=$2
esMes=~'^[0-9][0-9]*' 
esAnio=~'^[1-9]|[0-9][0-9]*' 
Meses='^[Ene|Jan|Feb|Mar|Abr|Apr|May|Jun|Jul|Ago|Aug|Sep|Oct|Nov|Dic|Dec]'

#Condiciones de uso:
#Si viene solo un parametro es el año
#Si vienen dos parametros el primero sera el mes y el segundo el año
#El mes puede venir en formato numero 1-12
#o en formato texto: abreviaturas en ingles Jan,Feb,Mar
#o con su nombre completo en ingles January, Febreruay...


function pintaAyuda(){

echo "

MCAL(1)  --Extraido de ayuda de cal
                         


NAME
     mcal [[mes] [año]] — muestra el calendario del mes y/o año pasado por parametro

SYNOPSIS
     mcal [[month] year] siendo month valores numericos comprendidos entre 1 y 12 y abreviaturas/nombresCompletos en ingles o castellano referentes al mes en cuestion que se quiere consultar
     mcal [[month] year] siendo year el valor numerico del año sobre el que se quiere consultar el calendario. Valores permitidos de 12 a 9999.
     
DESCRIPTION

	Utilidad basica para mostrar el calendario del mes y/o año pasado por parametro
     
	Opciones disonibles:

     -help      Muestra el contenido del fichero actual donde se muestra informacion relativa al comando mcal.



AUTHOR : Francisco Salas Hortelano

"
}



#validacion del numero de parametros
if [ $Params -ge 3 ]  
then
echo "Error en el numero de parametros" 
exit -1 
fi


#si estamos aqui es porque el numero de parametros es el correcto
#ahora hay que validar si el formato de los parametros es correcto

case $Params in

 0)#Nos invocan sin parametro alguno --> Mostrar calendario del mes/año actual 
	
	cal
	exit 0;
	;;

 1) #Nos invocan con un solo parametro--> puede ser un mes(valores 1-12) o un año si es mayor que 12
	
	case $1 in

	-help) #Me estan pidiendo el manual del comando
	pintaAyuda	
	exit 0
	;;

       	[0-9]|[1][0-2]) #Me han pasado un parametro entre 1-12 por tanto es un mes
	cal -m $1
	exit 0
	;;

	[0-9]*)
	# Tenemos un unico parametro y si superior a cualquier mes lo consideramos año
	if [ $1 -gt 12 ] && [ $1 -le 9999 ]
	then		
	 cal -y $1
	exit 0	
	else
	echo "Año incorrecto (no mayor a 9999)"	
	exit 1
	fi
	;;

	*)
	#Aprovecho expresiones regulares y si las tres primeras letras del mes en texto coinciden muestro el mes (ahorro el comprobar texto completo "penalizando" que si metes algo despues de cumplir la expresion regular el programa traga	
	if  [[ $1 =~ $Meses ]]  
	then
	cal -m $1
	exit 0	
	else
	echo "Formato de parametro mes incorrecto"	
	exit 1	
	fi
 	;;

#Fin del case de un parametro en la invocacion
esac
;;
 
 2) #Recibimos dos parametros en la invocacion (primero sera mes, segundo año) 

	if   [[  $1 =~ $Meses  ||   $2 =~ $esAnio ]] 
	then
	 cal $Mes $Anio
	exit 0	
	else
	echo "Formato del parametro mes/año incorrecto"
	exit 1	
	fi
	;;
esac
exit 0 
